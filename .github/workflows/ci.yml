name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .
    
    - name: Run quality checks
      run: |
        # Run all quality checks using invoke
        invoke quality.all
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.python-version }}
        path: |
          htmlcov/
          .coverage
          coverage.xml
        retention-days: 7
    
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    # Skip integration tests for docs-only changes
    if: |
      github.event_name == 'push' || 
      !contains(github.event.pull_request.labels.*.name, 'documentation') &&
      !startsWith(github.event.pull_request.title, '[docs]')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-integration-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-integration-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .
    
    - name: Run integration tests
      run: |
        pytest tests/integration/ -v --cov=indexagent --cov-report=xml --cov-report=html
    
    - name: Upload integration test coverage
      uses: actions/upload-artifact@v4
      with:
        name: integration-coverage
        path: |
          htmlcov/
          coverage.xml
        retention-days: 7
  
  # Optional: Check if all required jobs passed
  ci-success:
    name: CI Success
    needs: [test, integration-tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Check if all jobs passed
      run: |
        if [[ "${{ needs.test.result }}" != "success" ]]; then
          echo "Test job failed"
          exit 1
        fi
        # Integration tests might be skipped for docs-only changes
        if [[ "${{ needs.integration-tests.result }}" == "failure" ]]; then
          echo "Integration tests failed"
          exit 1
        fi
        echo "All CI checks passed!"